#!/usr/bin/env python
# coding: utf-8

# In[2]:


import pandas as pd


# In[4]:


df = pd.read_csv('5560.csv')


# In[5]:


data = pd.read_csv('5560.csv')


# In[6]:


df .head()


# In[7]:


df .head(5000)


# In[8]:


df .head(15000)


# In[9]:


import numpy as np


# In[10]:


from sklearn.ensemble import RandomForestClassifier
from sklearn.feature_extraction.text import TfidfVectorizer


# In[19]:


# Sample data (5560.csv)
# Assume each element in 'data' is a string representing an app's features
data = [
    "permission1, permission2, permission3, ...",
    "permission4, permission5, permission6, ...",
    # Add more samples...
]


# In[13]:


labels = np.array([0, 1])


# In[14]:


vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(data)


# In[15]:


random_forest = RandomForestClassifier(n_estimators=100, random_state=42)
random_forest.fit(X, labels)


# In[16]:


def detect_malware(new_app_permissions):
    # Transform the new app's permissions into a feature vector using the same vectorizer
    new_app_features = vectorizer.transform([new_app_permissions])

    # Predict whether the new app is malware
    prediction = random_forest.predict(new_app_features)
    return prediction[0]


# In[20]:


new_app_permissions = "permission1, permission2, permission3, ..."
malware_prediction = detect_malware(new_app_permissions)
if malware_prediction == 1:
    print("Malware detected!")
else:
    print("No malware detected.")
    


# In[ ]:




